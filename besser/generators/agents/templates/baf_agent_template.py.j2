# Import necessary modules
import logging

from besser.agent.core.agent import Agent
from besser.agent.core.session import Session
from besser.agent.exceptions.logger import logger

# Configure the logging module (optional)
logger.setLevel(logging.INFO)

# Create the agent
agent = Agent('{{ sm.name }}_agent')
# Load agent properties stored in a dedicated file
agent.load_properties('config.ini')
# Define the platform your agent will use
websocket_platform = agent.use_websocket_platform(use_ui=True)

# STATES
{%- for state in sm.states %}
{{ state.name }}_state = agent.new_state('{{ state.name }}'{% if state.initial %}, initial=True{% endif %})
{%- endfor %}

# INTENTS
{%- set seen_events = [] %}
{%- for state in sm.states %}
    {%- for transition in state.transitions %}
        {%- if transition.event.name not in seen_events %}
{{ transition.event.name }} = agent.new_intent('{{ transition.event.name }}', [
    {%- for example in transition.event.examples %}
    '{{ example }}'{% if not loop.last %}, {% endif %}
    {%- endfor %}
])
        {%- set _ = seen_events.append(transition.event.name) %}
        {%- endif %}
    {%- endfor %}
{%- endfor %}

# STATES BODIES' DEFINITION + TRANSITIONS
{%- for state in sm.states %}

{{ state.body.code}}

{{ state.name }}_state.set_body({{ state.body.name }})

{%- for transition in state.transitions %}
{{ state.name }}_state.when_intent_matched_go_to({{ transition.event.name }}, {{ transition.dest.name }}_state)

{%- endfor %}

{%- endfor %}

# RUN APPLICATION
if __name__ == '__main__':
    agent.run()