# Generated from BOCL.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,88,736,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,
        84,2,85,7,85,2,86,7,86,2,87,7,87,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,
        1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,
        1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,
        1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,
        1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,
        1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,
        1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
        1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,
        1,17,1,17,1,17,3,17,288,8,17,1,18,4,18,291,8,18,11,18,12,18,292,
        1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,22,1,22,1,23,
        1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,
        1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,
        1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,
        1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
        1,34,1,34,3,34,362,8,34,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,
        1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,
        1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,43,
        1,43,1,44,1,44,1,44,1,45,1,45,1,46,1,46,1,46,1,47,1,47,1,48,1,48,
        1,48,1,48,1,48,1,48,3,48,415,8,48,1,49,1,49,1,49,1,49,1,50,1,50,
        1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,
        1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,
        1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,
        1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,
        1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,
        1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,61,
        1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,
        1,62,1,62,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,65,1,65,
        1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,66,
        1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,
        1,67,1,67,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,
        1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,70,1,70,
        1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,72,1,72,1,72,
        1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,
        1,72,1,72,1,72,1,72,1,73,1,73,1,73,1,73,1,73,1,73,1,74,1,74,1,74,
        1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,75,1,76,1,76,1,76,1,76,
        1,76,1,76,1,77,1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,79,1,79,
        1,79,1,80,1,80,1,80,1,80,1,80,3,80,650,8,80,1,81,1,81,1,81,1,81,
        1,82,1,82,5,82,658,8,82,10,82,12,82,661,9,82,1,82,1,82,1,82,1,82,
        3,82,667,8,82,1,83,4,83,670,8,83,11,83,12,83,671,1,83,1,83,4,83,
        676,8,83,11,83,12,83,677,3,83,680,8,83,1,84,1,84,1,84,1,84,5,84,
        686,8,84,10,84,12,84,689,9,84,1,84,3,84,692,8,84,1,84,1,84,1,84,
        1,84,1,84,3,84,699,8,84,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,
        1,85,3,85,710,8,85,1,86,1,86,1,86,1,86,5,86,716,8,86,10,86,12,86,
        719,9,86,1,86,1,86,1,86,1,86,1,86,1,87,1,87,1,87,1,87,5,87,730,8,
        87,10,87,12,87,733,9,87,1,87,1,87,1,717,0,88,1,1,3,2,5,3,7,4,9,5,
        11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,
        17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,
        28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,
        39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,
        50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,
        119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,
        69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,
        157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,
        88,1,0,6,3,0,9,10,13,13,32,32,3,0,65,90,95,95,97,122,4,0,48,57,64,
        90,95,95,97,122,1,0,48,57,2,0,34,34,92,92,2,0,10,10,13,13,754,0,
        1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,
        0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
        0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,
        0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,
        0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,
        0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,
        0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,
        0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,
        0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,
        0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,
        1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,
        0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,
        0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,
        129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,
        0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,
        1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,
        0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,
        0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,
        175,1,0,0,0,1,177,1,0,0,0,3,179,1,0,0,0,5,183,1,0,0,0,7,189,1,0,
        0,0,9,197,1,0,0,0,11,205,1,0,0,0,13,210,1,0,0,0,15,214,1,0,0,0,17,
        218,1,0,0,0,19,223,1,0,0,0,21,228,1,0,0,0,23,235,1,0,0,0,25,242,
        1,0,0,0,27,249,1,0,0,0,29,256,1,0,0,0,31,264,1,0,0,0,33,271,1,0,
        0,0,35,287,1,0,0,0,37,290,1,0,0,0,39,296,1,0,0,0,41,299,1,0,0,0,
        43,302,1,0,0,0,45,304,1,0,0,0,47,306,1,0,0,0,49,308,1,0,0,0,51,310,
        1,0,0,0,53,312,1,0,0,0,55,314,1,0,0,0,57,316,1,0,0,0,59,318,1,0,
        0,0,61,320,1,0,0,0,63,322,1,0,0,0,65,330,1,0,0,0,67,338,1,0,0,0,
        69,361,1,0,0,0,71,363,1,0,0,0,73,366,1,0,0,0,75,371,1,0,0,0,77,376,
        1,0,0,0,79,382,1,0,0,0,81,386,1,0,0,0,83,389,1,0,0,0,85,393,1,0,
        0,0,87,396,1,0,0,0,89,398,1,0,0,0,91,401,1,0,0,0,93,403,1,0,0,0,
        95,406,1,0,0,0,97,414,1,0,0,0,99,416,1,0,0,0,101,420,1,0,0,0,103,
        429,1,0,0,0,105,440,1,0,0,0,107,442,1,0,0,0,109,444,1,0,0,0,111,
        446,1,0,0,0,113,448,1,0,0,0,115,452,1,0,0,0,117,460,1,0,0,0,119,
        470,1,0,0,0,121,482,1,0,0,0,123,494,1,0,0,0,125,507,1,0,0,0,127,
        515,1,0,0,0,129,519,1,0,0,0,131,524,1,0,0,0,133,533,1,0,0,0,135,
        542,1,0,0,0,137,554,1,0,0,0,139,568,1,0,0,0,141,576,1,0,0,0,143,
        581,1,0,0,0,145,588,1,0,0,0,147,608,1,0,0,0,149,614,1,0,0,0,151,
        621,1,0,0,0,153,626,1,0,0,0,155,632,1,0,0,0,157,637,1,0,0,0,159,
        641,1,0,0,0,161,649,1,0,0,0,163,651,1,0,0,0,165,655,1,0,0,0,167,
        669,1,0,0,0,169,698,1,0,0,0,171,709,1,0,0,0,173,711,1,0,0,0,175,
        725,1,0,0,0,177,178,5,42,0,0,178,2,1,0,0,0,179,180,5,110,0,0,180,
        181,5,111,0,0,181,182,5,119,0,0,182,4,1,0,0,0,183,184,5,116,0,0,
        184,185,5,111,0,0,185,186,5,100,0,0,186,187,5,97,0,0,187,188,5,121,
        0,0,188,6,1,0,0,0,189,190,5,97,0,0,190,191,5,100,0,0,191,192,5,100,
        0,0,192,193,5,68,0,0,193,194,5,97,0,0,194,195,5,121,0,0,195,196,
        5,115,0,0,196,8,1,0,0,0,197,198,5,99,0,0,198,199,5,111,0,0,199,200,
        5,110,0,0,200,201,5,116,0,0,201,202,5,101,0,0,202,203,5,120,0,0,
        203,204,5,116,0,0,204,10,1,0,0,0,205,206,5,105,0,0,206,207,5,110,
        0,0,207,208,5,105,0,0,208,209,5,116,0,0,209,12,1,0,0,0,210,211,5,
        105,0,0,211,212,5,110,0,0,212,213,5,118,0,0,213,14,1,0,0,0,214,215,
        5,112,0,0,215,216,5,114,0,0,216,217,5,101,0,0,217,16,1,0,0,0,218,
        219,5,112,0,0,219,220,5,111,0,0,220,221,5,115,0,0,221,222,5,116,
        0,0,222,18,1,0,0,0,223,224,5,115,0,0,224,225,5,101,0,0,225,226,5,
        108,0,0,226,227,5,102,0,0,227,20,1,0,0,0,228,229,5,102,0,0,229,230,
        5,111,0,0,230,231,5,114,0,0,231,232,5,65,0,0,232,233,5,108,0,0,233,
        234,5,108,0,0,234,22,1,0,0,0,235,236,5,101,0,0,236,237,5,120,0,0,
        237,238,5,105,0,0,238,239,5,115,0,0,239,240,5,116,0,0,240,241,5,
        115,0,0,241,24,1,0,0,0,242,243,5,115,0,0,243,244,5,101,0,0,244,245,
        5,108,0,0,245,246,5,101,0,0,246,247,5,99,0,0,247,248,5,116,0,0,248,
        26,1,0,0,0,249,250,5,114,0,0,250,251,5,101,0,0,251,252,5,106,0,0,
        252,253,5,101,0,0,253,254,5,99,0,0,254,255,5,116,0,0,255,28,1,0,
        0,0,256,257,5,99,0,0,257,258,5,111,0,0,258,259,5,108,0,0,259,260,
        5,108,0,0,260,261,5,101,0,0,261,262,5,99,0,0,262,263,5,116,0,0,263,
        30,1,0,0,0,264,265,5,79,0,0,265,266,5,99,0,0,266,267,5,108,0,0,267,
        268,5,65,0,0,268,269,5,110,0,0,269,270,5,121,0,0,270,32,1,0,0,0,
        271,272,5,79,0,0,272,273,5,99,0,0,273,274,5,108,0,0,274,275,5,86,
        0,0,275,276,5,111,0,0,276,277,5,105,0,0,277,278,5,100,0,0,278,34,
        1,0,0,0,279,280,5,100,0,0,280,281,5,97,0,0,281,282,5,116,0,0,282,
        288,5,101,0,0,283,284,5,68,0,0,284,285,5,97,0,0,285,286,5,116,0,
        0,286,288,5,101,0,0,287,279,1,0,0,0,287,283,1,0,0,0,288,36,1,0,0,
        0,289,291,7,0,0,0,290,289,1,0,0,0,291,292,1,0,0,0,292,290,1,0,0,
        0,292,293,1,0,0,0,293,294,1,0,0,0,294,295,6,18,0,0,295,38,1,0,0,
        0,296,297,5,46,0,0,297,298,5,46,0,0,298,40,1,0,0,0,299,300,5,58,
        0,0,300,301,5,58,0,0,301,42,1,0,0,0,302,303,5,40,0,0,303,44,1,0,
        0,0,304,305,5,41,0,0,305,46,1,0,0,0,306,307,5,123,0,0,307,48,1,0,
        0,0,308,309,5,125,0,0,309,50,1,0,0,0,310,311,5,59,0,0,311,52,1,0,
        0,0,312,313,5,58,0,0,313,54,1,0,0,0,314,315,5,44,0,0,315,56,1,0,
        0,0,316,317,5,46,0,0,317,58,1,0,0,0,318,319,5,61,0,0,319,60,1,0,
        0,0,320,321,5,39,0,0,321,62,1,0,0,0,322,323,5,66,0,0,323,324,5,111,
        0,0,324,325,5,111,0,0,325,326,5,108,0,0,326,327,5,101,0,0,327,328,
        5,97,0,0,328,329,5,110,0,0,329,64,1,0,0,0,330,331,5,73,0,0,331,332,
        5,110,0,0,332,333,5,116,0,0,333,334,5,101,0,0,334,335,5,103,0,0,
        335,336,5,101,0,0,336,337,5,114,0,0,337,66,1,0,0,0,338,339,5,82,
        0,0,339,340,5,101,0,0,340,341,5,97,0,0,341,342,5,108,0,0,342,68,
        1,0,0,0,343,344,5,83,0,0,344,345,5,116,0,0,345,346,5,114,0,0,346,
        347,5,105,0,0,347,348,5,110,0,0,348,362,5,103,0,0,349,350,5,115,
        0,0,350,351,5,116,0,0,351,362,5,114,0,0,352,353,5,83,0,0,353,354,
        5,116,0,0,354,362,5,114,0,0,355,356,5,115,0,0,356,357,5,116,0,0,
        357,358,5,114,0,0,358,359,5,105,0,0,359,360,5,110,0,0,360,362,5,
        103,0,0,361,343,1,0,0,0,361,349,1,0,0,0,361,352,1,0,0,0,361,355,
        1,0,0,0,362,70,1,0,0,0,363,364,5,105,0,0,364,365,5,102,0,0,365,72,
        1,0,0,0,366,367,5,116,0,0,367,368,5,104,0,0,368,369,5,101,0,0,369,
        370,5,110,0,0,370,74,1,0,0,0,371,372,5,101,0,0,372,373,5,108,0,0,
        373,374,5,115,0,0,374,375,5,101,0,0,375,76,1,0,0,0,376,377,5,101,
        0,0,377,378,5,110,0,0,378,379,5,100,0,0,379,380,5,105,0,0,380,381,
        5,102,0,0,381,78,1,0,0,0,382,383,5,97,0,0,383,384,5,110,0,0,384,
        385,5,100,0,0,385,80,1,0,0,0,386,387,5,111,0,0,387,388,5,114,0,0,
        388,82,1,0,0,0,389,390,5,110,0,0,390,391,5,111,0,0,391,392,5,116,
        0,0,392,84,1,0,0,0,393,394,5,60,0,0,394,395,5,62,0,0,395,86,1,0,
        0,0,396,397,5,60,0,0,397,88,1,0,0,0,398,399,5,60,0,0,399,400,5,61,
        0,0,400,90,1,0,0,0,401,402,5,62,0,0,402,92,1,0,0,0,403,404,5,62,
        0,0,404,405,5,61,0,0,405,94,1,0,0,0,406,407,5,124,0,0,407,96,1,0,
        0,0,408,409,5,83,0,0,409,410,5,101,0,0,410,415,5,116,0,0,411,412,
        5,115,0,0,412,413,5,101,0,0,413,415,5,116,0,0,414,408,1,0,0,0,414,
        411,1,0,0,0,415,98,1,0,0,0,416,417,5,66,0,0,417,418,5,97,0,0,418,
        419,5,103,0,0,419,100,1,0,0,0,420,421,5,83,0,0,421,422,5,101,0,0,
        422,423,5,113,0,0,423,424,5,117,0,0,424,425,5,101,0,0,425,426,5,
        110,0,0,426,427,5,99,0,0,427,428,5,101,0,0,428,102,1,0,0,0,429,430,
        5,79,0,0,430,431,5,114,0,0,431,432,5,100,0,0,432,433,5,101,0,0,433,
        434,5,114,0,0,434,435,5,101,0,0,435,436,5,100,0,0,436,437,5,83,0,
        0,437,438,5,101,0,0,438,439,5,116,0,0,439,104,1,0,0,0,440,441,5,
        45,0,0,441,106,1,0,0,0,442,443,5,43,0,0,443,108,1,0,0,0,444,445,
        5,47,0,0,445,110,1,0,0,0,446,447,5,32,0,0,447,112,1,0,0,0,448,449,
        5,120,0,0,449,450,5,111,0,0,450,451,5,114,0,0,451,114,1,0,0,0,452,
        453,5,105,0,0,453,454,5,109,0,0,454,455,5,112,0,0,455,456,5,108,
        0,0,456,457,5,105,0,0,457,458,5,101,0,0,458,459,5,115,0,0,459,116,
        1,0,0,0,460,461,5,111,0,0,461,462,5,99,0,0,462,463,5,108,0,0,463,
        464,5,65,0,0,464,465,5,115,0,0,465,466,5,84,0,0,466,467,5,121,0,
        0,467,468,5,112,0,0,468,469,5,101,0,0,469,118,1,0,0,0,470,471,5,
        111,0,0,471,472,5,99,0,0,472,473,5,108,0,0,473,474,5,73,0,0,474,
        475,5,115,0,0,475,476,5,84,0,0,476,477,5,121,0,0,477,478,5,112,0,
        0,478,479,5,101,0,0,479,480,5,79,0,0,480,481,5,102,0,0,481,120,1,
        0,0,0,482,483,5,111,0,0,483,484,5,99,0,0,484,485,5,108,0,0,485,486,
        5,73,0,0,486,487,5,115,0,0,487,488,5,75,0,0,488,489,5,105,0,0,489,
        490,5,110,0,0,490,491,5,100,0,0,491,492,5,79,0,0,492,493,5,102,0,
        0,493,122,1,0,0,0,494,495,5,97,0,0,495,496,5,108,0,0,496,497,5,108,
        0,0,497,498,5,73,0,0,498,499,5,110,0,0,499,500,5,115,0,0,500,501,
        5,116,0,0,501,502,5,97,0,0,502,503,5,110,0,0,503,504,5,99,0,0,504,
        505,5,101,0,0,505,506,5,115,0,0,506,124,1,0,0,0,507,508,5,105,0,
        0,508,509,5,115,0,0,509,510,5,69,0,0,510,511,5,109,0,0,511,512,5,
        112,0,0,512,513,5,116,0,0,513,514,5,121,0,0,514,126,1,0,0,0,515,
        516,5,115,0,0,516,517,5,117,0,0,517,518,5,109,0,0,518,128,1,0,0,
        0,519,520,5,115,0,0,520,521,5,105,0,0,521,522,5,122,0,0,522,523,
        5,101,0,0,523,130,1,0,0,0,524,525,5,105,0,0,525,526,5,110,0,0,526,
        527,5,99,0,0,527,528,5,108,0,0,528,529,5,117,0,0,529,530,5,100,0,
        0,530,531,5,101,0,0,531,532,5,115,0,0,532,132,1,0,0,0,533,534,5,
        101,0,0,534,535,5,120,0,0,535,536,5,99,0,0,536,537,5,108,0,0,537,
        538,5,117,0,0,538,539,5,100,0,0,539,540,5,101,0,0,540,541,5,115,
        0,0,541,134,1,0,0,0,542,543,5,115,0,0,543,544,5,117,0,0,544,545,
        5,98,0,0,545,546,5,83,0,0,546,547,5,101,0,0,547,548,5,113,0,0,548,
        549,5,117,0,0,549,550,5,101,0,0,550,551,5,110,0,0,551,552,5,99,0,
        0,552,553,5,101,0,0,553,136,1,0,0,0,554,555,5,115,0,0,555,556,5,
        117,0,0,556,557,5,98,0,0,557,558,5,79,0,0,558,559,5,114,0,0,559,
        560,5,100,0,0,560,561,5,101,0,0,561,562,5,114,0,0,562,563,5,101,
        0,0,563,564,5,100,0,0,564,565,5,83,0,0,565,566,5,101,0,0,566,567,
        5,116,0,0,567,138,1,0,0,0,568,569,5,112,0,0,569,570,5,114,0,0,570,
        571,5,101,0,0,571,572,5,112,0,0,572,573,5,101,0,0,573,574,5,110,
        0,0,574,575,5,100,0,0,575,140,1,0,0,0,576,577,5,108,0,0,577,578,
        5,97,0,0,578,579,5,115,0,0,579,580,5,116,0,0,580,142,1,0,0,0,581,
        582,5,97,0,0,582,583,5,112,0,0,583,584,5,112,0,0,584,585,5,101,0,
        0,585,586,5,110,0,0,586,587,5,100,0,0,587,144,1,0,0,0,588,589,5,
        115,0,0,589,590,5,121,0,0,590,591,5,109,0,0,591,592,5,109,0,0,592,
        593,5,101,0,0,593,594,5,116,0,0,594,595,5,114,0,0,595,596,5,105,
        0,0,596,597,5,99,0,0,597,598,5,68,0,0,598,599,5,105,0,0,599,600,
        5,102,0,0,600,601,5,102,0,0,601,602,5,101,0,0,602,603,5,114,0,0,
        603,604,5,101,0,0,604,605,5,110,0,0,605,606,5,99,0,0,606,607,5,101,
        0,0,607,146,1,0,0,0,608,609,5,102,0,0,609,610,5,105,0,0,610,611,
        5,114,0,0,611,612,5,115,0,0,612,613,5,116,0,0,613,148,1,0,0,0,614,
        615,5,100,0,0,615,616,5,101,0,0,616,617,5,114,0,0,617,618,5,105,
        0,0,618,619,5,118,0,0,619,620,5,101,0,0,620,150,1,0,0,0,621,622,
        5,98,0,0,622,623,5,111,0,0,623,624,5,100,0,0,624,625,5,121,0,0,625,
        152,1,0,0,0,626,627,5,117,0,0,627,628,5,110,0,0,628,629,5,105,0,
        0,629,630,5,111,0,0,630,631,5,110,0,0,631,154,1,0,0,0,632,633,5,
        110,0,0,633,634,5,117,0,0,634,635,5,108,0,0,635,636,5,108,0,0,636,
        156,1,0,0,0,637,638,5,108,0,0,638,639,5,101,0,0,639,640,5,116,0,
        0,640,158,1,0,0,0,641,642,5,105,0,0,642,643,5,110,0,0,643,160,1,
        0,0,0,644,645,5,45,0,0,645,650,5,62,0,0,646,647,5,226,0,0,647,648,
        5,8224,0,0,648,650,5,8217,0,0,649,644,1,0,0,0,649,646,1,0,0,0,650,
        162,1,0,0,0,651,652,5,100,0,0,652,653,5,101,0,0,653,654,5,102,0,
        0,654,164,1,0,0,0,655,659,7,1,0,0,656,658,7,2,0,0,657,656,1,0,0,
        0,658,661,1,0,0,0,659,657,1,0,0,0,659,660,1,0,0,0,660,666,1,0,0,
        0,661,659,1,0,0,0,662,663,5,64,0,0,663,664,5,112,0,0,664,665,5,114,
        0,0,665,667,5,101,0,0,666,662,1,0,0,0,666,667,1,0,0,0,667,166,1,
        0,0,0,668,670,7,3,0,0,669,668,1,0,0,0,670,671,1,0,0,0,671,669,1,
        0,0,0,671,672,1,0,0,0,672,679,1,0,0,0,673,675,5,46,0,0,674,676,7,
        3,0,0,675,674,1,0,0,0,676,677,1,0,0,0,677,675,1,0,0,0,677,678,1,
        0,0,0,678,680,1,0,0,0,679,673,1,0,0,0,679,680,1,0,0,0,680,168,1,
        0,0,0,681,687,5,34,0,0,682,686,8,4,0,0,683,684,5,92,0,0,684,686,
        9,0,0,0,685,682,1,0,0,0,685,683,1,0,0,0,686,689,1,0,0,0,687,685,
        1,0,0,0,687,688,1,0,0,0,688,691,1,0,0,0,689,687,1,0,0,0,690,692,
        3,165,82,0,691,690,1,0,0,0,691,692,1,0,0,0,692,693,1,0,0,0,693,699,
        5,34,0,0,694,695,3,61,30,0,695,696,3,165,82,0,696,697,3,61,30,0,
        697,699,1,0,0,0,698,681,1,0,0,0,698,694,1,0,0,0,699,170,1,0,0,0,
        700,701,5,116,0,0,701,702,5,114,0,0,702,703,5,117,0,0,703,710,5,
        101,0,0,704,705,5,102,0,0,705,706,5,97,0,0,706,707,5,108,0,0,707,
        708,5,115,0,0,708,710,5,101,0,0,709,700,1,0,0,0,709,704,1,0,0,0,
        710,172,1,0,0,0,711,712,5,47,0,0,712,713,5,42,0,0,713,717,1,0,0,
        0,714,716,9,0,0,0,715,714,1,0,0,0,716,719,1,0,0,0,717,718,1,0,0,
        0,717,715,1,0,0,0,718,720,1,0,0,0,719,717,1,0,0,0,720,721,5,42,0,
        0,721,722,5,47,0,0,722,723,1,0,0,0,723,724,6,86,0,0,724,174,1,0,
        0,0,725,726,5,47,0,0,726,727,5,47,0,0,727,731,1,0,0,0,728,730,8,
        5,0,0,729,728,1,0,0,0,730,733,1,0,0,0,731,729,1,0,0,0,731,732,1,
        0,0,0,732,734,1,0,0,0,733,731,1,0,0,0,734,735,6,87,0,0,735,176,1,
        0,0,0,18,0,287,292,361,414,649,659,666,671,677,679,685,687,691,698,
        709,717,731,1,6,0,0
    ]

class BOCLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    CONTEXT = 5
    INIT = 6
    INV = 7
    PRE = 8
    POST = 9
    SELF = 10
    FORALL = 11
    EXISTS = 12
    SELECT = 13
    REJECT = 14
    COLLECT = 15
    OCLANY = 16
    OCLVOID = 17
    DATE = 18
    WS = 19
    DoubleDots = 20
    DoubleCOLON = 21
    LPAREN = 22
    RPAREN = 23
    LBRACE = 24
    RBRACE = 25
    SEMI = 26
    COLON = 27
    COMMA = 28
    DOT = 29
    EQUAL = 30
    SingleQuote = 31
    BOOLEAN_TYPE = 32
    INTEGER_TYPE = 33
    REAL_TYPE = 34
    STRING_TYPE = 35
    IF = 36
    THEN = 37
    ELSE = 38
    ENDIF = 39
    AND = 40
    OR = 41
    NOT = 42
    NOTEQUAL = 43
    LT = 44
    LE = 45
    GT = 46
    GE = 47
    PIPE = 48
    SET = 49
    BAG = 50
    SEQUENCE = 51
    ORDEREDSET = 52
    MINUS = 53
    PLUS = 54
    Divide = 55
    EMPTYSTRING = 56
    XOR = 57
    IMPLIES = 58
    OCLASTYPE = 59
    OCLISTYPEOF = 60
    OCLISKINDOF = 61
    ALLINSTANCES = 62
    ISEMPTY = 63
    SUM = 64
    SIZE = 65
    INCLUDES = 66
    EXCLUDES = 67
    SUBSEQUENCE = 68
    SUBORDEREDSET = 69
    PREPEND = 70
    LAST = 71
    APPEND = 72
    SYMMETRICDIFFERENCE = 73
    FIRST = 74
    DERIVE = 75
    BODY = 76
    UNION = 77
    NULL = 78
    LET = 79
    IN = 80
    Arrow = 81
    Def = 82
    ID = 83
    NUMBER = 84
    STRING_LITERAL = 85
    BOOLEAN_LITERAL = 86
    COMMENT = 87
    LINE_COMMENT = 88

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'*'", "'now'", "'today'", "'addDays'", "'context'", "'init'", 
            "'inv'", "'pre'", "'post'", "'self'", "'forAll'", "'exists'", 
            "'select'", "'reject'", "'collect'", "'OclAny'", "'OclVoid'", 
            "'..'", "'::'", "'('", "')'", "'{'", "'}'", "';'", "':'", "','", 
            "'.'", "'='", "'''", "'Boolean'", "'Integer'", "'Real'", "'if'", 
            "'then'", "'else'", "'endif'", "'and'", "'or'", "'not'", "'<>'", 
            "'<'", "'<='", "'>'", "'>='", "'|'", "'Bag'", "'Sequence'", 
            "'OrderedSet'", "'-'", "'+'", "'/'", "' '", "'xor'", "'implies'", 
            "'oclAsType'", "'oclIsTypeOf'", "'oclIsKindOf'", "'allInstances'", 
            "'isEmpty'", "'sum'", "'size'", "'includes'", "'excludes'", 
            "'subSequence'", "'subOrderedSet'", "'prepend'", "'last'", "'append'", 
            "'symmetricDifference'", "'first'", "'derive'", "'body'", "'union'", 
            "'null'", "'let'", "'in'", "'def'" ]

    symbolicNames = [ "<INVALID>",
            "CONTEXT", "INIT", "INV", "PRE", "POST", "SELF", "FORALL", "EXISTS", 
            "SELECT", "REJECT", "COLLECT", "OCLANY", "OCLVOID", "DATE", 
            "WS", "DoubleDots", "DoubleCOLON", "LPAREN", "RPAREN", "LBRACE", 
            "RBRACE", "SEMI", "COLON", "COMMA", "DOT", "EQUAL", "SingleQuote", 
            "BOOLEAN_TYPE", "INTEGER_TYPE", "REAL_TYPE", "STRING_TYPE", 
            "IF", "THEN", "ELSE", "ENDIF", "AND", "OR", "NOT", "NOTEQUAL", 
            "LT", "LE", "GT", "GE", "PIPE", "SET", "BAG", "SEQUENCE", "ORDEREDSET", 
            "MINUS", "PLUS", "Divide", "EMPTYSTRING", "XOR", "IMPLIES", 
            "OCLASTYPE", "OCLISTYPEOF", "OCLISKINDOF", "ALLINSTANCES", "ISEMPTY", 
            "SUM", "SIZE", "INCLUDES", "EXCLUDES", "SUBSEQUENCE", "SUBORDEREDSET", 
            "PREPEND", "LAST", "APPEND", "SYMMETRICDIFFERENCE", "FIRST", 
            "DERIVE", "BODY", "UNION", "NULL", "LET", "IN", "Arrow", "Def", 
            "ID", "NUMBER", "STRING_LITERAL", "BOOLEAN_LITERAL", "COMMENT", 
            "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "CONTEXT", "INIT", "INV", 
                  "PRE", "POST", "SELF", "FORALL", "EXISTS", "SELECT", "REJECT", 
                  "COLLECT", "OCLANY", "OCLVOID", "DATE", "WS", "DoubleDots", 
                  "DoubleCOLON", "LPAREN", "RPAREN", "LBRACE", "RBRACE", 
                  "SEMI", "COLON", "COMMA", "DOT", "EQUAL", "SingleQuote", 
                  "BOOLEAN_TYPE", "INTEGER_TYPE", "REAL_TYPE", "STRING_TYPE", 
                  "IF", "THEN", "ELSE", "ENDIF", "AND", "OR", "NOT", "NOTEQUAL", 
                  "LT", "LE", "GT", "GE", "PIPE", "SET", "BAG", "SEQUENCE", 
                  "ORDEREDSET", "MINUS", "PLUS", "Divide", "EMPTYSTRING", 
                  "XOR", "IMPLIES", "OCLASTYPE", "OCLISTYPEOF", "OCLISKINDOF", 
                  "ALLINSTANCES", "ISEMPTY", "SUM", "SIZE", "INCLUDES", 
                  "EXCLUDES", "SUBSEQUENCE", "SUBORDEREDSET", "PREPEND", 
                  "LAST", "APPEND", "SYMMETRICDIFFERENCE", "FIRST", "DERIVE", 
                  "BODY", "UNION", "NULL", "LET", "IN", "Arrow", "Def", 
                  "ID", "NUMBER", "STRING_LITERAL", "BOOLEAN_LITERAL", "COMMENT", 
                  "LINE_COMMENT" ]

    grammarFileName = "BOCL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


